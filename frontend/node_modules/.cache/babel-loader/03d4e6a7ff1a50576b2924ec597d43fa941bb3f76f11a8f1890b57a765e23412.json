{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ali\\\\Documents\\\\wb-analytics\\\\frontend\\\\src\\\\components\\\\Charts.js\";\nimport React from 'react';\nimport { Box, Paper, Typography } from '@mui/material';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer, LineChart, Line, CartesianGrid, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getPriceHistogramData(products) {\n  // Диапазоны цен (пример: 0-1000, 1000-2000, ...)\n  const bins = [0, 1000, 2000, 3000, 5000, 10000, 20000];\n  const data = bins.map((min, i) => {\n    const max = bins[i + 1] || Infinity;\n    const count = products.filter(p => p.price >= min && p.price < max).length;\n    return {\n      name: `${min} - ${max === Infinity ? '∞' : max}`,\n      count\n    };\n  });\n  return data;\n}\nfunction getDiscountVsRatingData(products) {\n  return products.map(p => ({\n    rating: p.rating,\n    discount: p.price - p.sale_price\n  }));\n}\nexport default function Charts({\n  products\n}) {\n  const histData = getPriceHistogramData(products);\n  const lineData = getDiscountVsRatingData(products);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      gap: 4,\n      mt: 4,\n      flexWrap: 'wrap'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2,\n        flex: 1,\n        minWidth: 350\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"\\u0413\\u0438\\u0441\\u0442\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0430 \\u0446\\u0435\\u043D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 250,\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: histData,\n          children: [/*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            allowDecimals: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"count\",\n            fill: \"#1976d2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2,\n        flex: 1,\n        minWidth: 350\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"\\u0421\\u043A\\u0438\\u0434\\u043A\\u0430 vs \\u0420\\u0435\\u0439\\u0442\\u0438\\u043D\\u0433\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 250,\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: lineData,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"discount\",\n            stroke: \"#d32f2f\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_c = Charts;\nvar _c;\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"names":["React","Box","Paper","Typography","BarChart","Bar","XAxis","YAxis","Tooltip","ResponsiveContainer","LineChart","Line","CartesianGrid","Legend","jsxDEV","_jsxDEV","getPriceHistogramData","products","bins","data","map","min","i","max","Infinity","count","filter","p","price","length","name","getDiscountVsRatingData","rating","discount","sale_price","Charts","histData","lineData","sx","display","gap","mt","flexWrap","children","flex","minWidth","variant","fileName","_jsxFileName","lineNumber","columnNumber","width","height","dataKey","allowDecimals","fill","strokeDasharray","type","stroke","_c","$RefreshReg$"],"sources":["C:/Users/Ali/Documents/wb-analytics/frontend/src/components/Charts.js"],"sourcesContent":["import React from 'react';\r\nimport { Box, Paper, Typography } from '@mui/material';\r\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, ResponsiveContainer, LineChart, Line, CartesianGrid, Legend } from 'recharts';\r\n\r\nfunction getPriceHistogramData(products) {\r\n  // Диапазоны цен (пример: 0-1000, 1000-2000, ...)\r\n  const bins = [0, 1000, 2000, 3000, 5000, 10000, 20000];\r\n  const data = bins.map((min, i) => {\r\n    const max = bins[i + 1] || Infinity;\r\n    const count = products.filter(p => p.price >= min && p.price < max).length;\r\n    return { name: `${min} - ${max === Infinity ? '∞' : max}`, count };\r\n  });\r\n  return data;\r\n}\r\n\r\nfunction getDiscountVsRatingData(products) {\r\n  return products.map(p => ({\r\n    rating: p.rating,\r\n    discount: p.price - p.sale_price\r\n  }));\r\n}\r\n\r\nexport default function Charts({ products }) {\r\n  const histData = getPriceHistogramData(products);\r\n  const lineData = getDiscountVsRatingData(products);\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', gap: 4, mt: 4, flexWrap: 'wrap' }}>\r\n      <Paper sx={{ p: 2, flex: 1, minWidth: 350 }}>\r\n        <Typography variant=\"h6\">Гистограмма цен</Typography>\r\n        <ResponsiveContainer width=\"100%\" height={250}>\r\n          <BarChart data={histData}>\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis allowDecimals={false} />\r\n            <Tooltip />\r\n            <Bar dataKey=\"count\" fill=\"#1976d2\" />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </Paper>\r\n      <Paper sx={{ p: 2, flex: 1, minWidth: 350 }}>\r\n        <Typography variant=\"h6\">Скидка vs Рейтинг</Typography>\r\n        <ResponsiveContainer width=\"100%\" height={250}>\r\n          <LineChart data={lineData}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"rating\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Line type=\"monotone\" dataKey=\"discount\" stroke=\"#d32f2f\" />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}